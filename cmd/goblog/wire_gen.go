// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"github.com/go-redis/redis/v8"
	"github.com/minio/minio-go/v7"
	"goblog.com/goblog/internal/goblog/config"
	"goblog.com/goblog/internal/goblog/handler"
	"goblog.com/goblog/internal/goblog/repository"
	"goblog.com/goblog/internal/goblog/router"
	"goblog.com/goblog/internal/goblog/service"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitRoutes(engine *gin.Engine, settings *config.Settings, db *gorm.DB, store *minio.Client, redis2 *redis.Client) any {
	userRepository := repository.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	tokenRepository := repository.NewTokenRepository(redis2)
	tokenService := service.NewTokenService(settings, tokenRepository)
	authService := service.NewAuthService(userService, tokenService, settings)
	authHandler := handler.NewAuthHandler(authService)
	commentRepository := repository.NewCommentRepository(db)
	commentService := service.NewCommentService(commentRepository)
	commentHandler := handler.NewCommentHandler(commentService)
	postRepository := repository.NewPostRepository(db)
	storeService := service.NewStoreService(store, settings)
	postService := service.NewPostService(postRepository, storeService)
	postHandler := handler.NewPostHandler(postService, storeService)
	proxyHandler := handler.NewProxyHandler(settings)
	v := router.InitRoutes(engine, authHandler, commentHandler, postHandler, proxyHandler, tokenService, settings)
	return v
}
